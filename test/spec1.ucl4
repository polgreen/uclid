module testModule {
       
  input in_b : bool;
  input mem_in : [int] int;
  output mem_out : [int] int;
  var v1: bool;
  var v2: int -> t1;
  var v3: int -> bool;

  type t1 = record {a: int, b: int, c: bool};
  var tmp2: t1;
  
  property phi : G (F 3 < 5);
  
  procedure p1(a1: int, a2: t1) {
    localvar tmp1: t1;
    tmp1.a := 1; tmp1.b := 2; tmp1.c := false;
    v1 := true ==> false;
    v2 := Lambda(i:int). tmp1;
    v3 := Lambda(i:int). ITE(i == a1, true, v3(i));
  }

  next {
    case
       in_b : { mem_out[1] := mem_in[1]; } 
       (! in_b) : { 
         tmp2.a := 2; tmp2.b := 3; tmp2.c := false;
         call () := p1(1,tmp2); 
       } 
    esac
  }
  
  init {
      
  }
}
