module main
{
  input w  : int;
  var nums : [int]int;
  var x : int; 

  procedure add(a : int, b : int) returns (c : int)
    requires (a >= 0 && a < 10);
    requires (b >= 0 && b < 10);
    ensures c == a + b;
    ensures (c >= 0 && c < 18);
  {
    c := a + b;
  }

  procedure sum(n : int) returns (numbers : [int]int)
    requires (n > 0);
    requires (n < 5);
    ensures (forall (i : int) :: (i > 0 && i < 5) ==> numbers[i] == i);
    modifies x;
  {
    for i in range(1, 5) {
      if (i < n) {
        numbers[i] := i;
      }
    }
    x := x + 1;
  }

  next {
    call (nums) := sum(n);
  }

  control {
    print_module;
    verify(add);
    verify(sum);
    decide;
    print_results;
  }
}