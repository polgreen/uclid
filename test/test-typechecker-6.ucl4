module main {
  var a, b : int;
  const one : int;

  procedure fib(x: int, y: int) returns (z:int, w:int) {
    one := one + 1;
    x := x + one; 
    z, w := y, x + y;
  }

  init {
    one := 1;
    a := 0b0; // binary literal
    b := 0x1; // hexadecimal literal
  }

  next {
    call (a, b) := fib(a, b);
    assert (a <= b);
    assert (a < b);
    // These weird assertions are to check the +/- arithmetic operators.
    assert (a+b <= b+b);
    assert (a-a <= b-a);
  }

  control {
    initialize;
  	simulate (3);
  	decide;
  	print_results;
  }
}
