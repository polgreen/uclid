module testModule {
  var y: int;
  input mem_in : [int] int;
  type t = bool;
  type t = enum {red, green, blue};
  type t = record {a: int, b: int, c: bool};
  type t = record {a: int, b: int, c: record {d: bool, e: t}};
  var z : t;

  procedure f(x: int, y: int) returns (z:int) { 
    localvar x: int;
    assume (x > 0); 
    assert (x < 1); 
    havoc x; 
    x,y := y,x; 
  }
  output mem_out : [int] int;
}
